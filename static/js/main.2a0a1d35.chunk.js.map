{"version":3,"sources":["logo.png","Posts.js","useFetch.js","SearchAppBar.js","App.js","reportWebVitals.js","index.js"],"names":["Posts","posts","url","useState","data","setData","useEffect","a","fetch","response","ok","json","loadData","useFetch","Grid","container","spacing","map","post","index","item","xs","Card","CardContent","Typography","color","gutterBottom","dangerouslySetInnerHTML","__html","title","rendered","variant","component","content","useStyles","makeStyles","theme","root","flexGrow","width","farbe","backgroundColor","menuButton","marginRight","display","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","classes","className","AppBar","Toolbar","IconButton","edge","noWrap","InputBase","placeholder","input","inputProps","navigator","serviceWorker","register","then","console","log","catch","error","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a0a1d35.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.8e152f3d.png\";","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nexport default function Posts() {\r\n  const posts = useFetch(\"https://www.brain2brain.de/RAW-WP/wp-json/wp/v2/posts\");\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {posts &&\r\n        posts.map((post, index) => (\r\n          <Grid item xs={4} key={index}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                  dangerouslySetInnerHTML={{ __html: post.title.rendered }}\r\n                />\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"p\"\r\n                  dangerouslySetInnerHTML={{ __html: post.content.rendered }}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n    </Grid>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useFetch(url) {\r\n    const [data, setData] = useState(null);\r\n    useEffect(() => {\r\n        async function loadData() {\r\n            const response = await fetch(url);\r\n            if(!response.ok) {\r\n                return;\r\n            }\r\n\r\n            const posts = await response.json();\r\n            setData(posts);\r\n        }\r\n\r\n        loadData();\r\n    }, [url]);\r\n    return data;\r\n}","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n  },\r\n  farbe: {\r\n    backgroundColor: \"#bdd3db\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'none',\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'block',\r\n    },\r\n  },\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '30ch',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function SearchAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.farbe}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <SearchIcon />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Suche…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import logo from \"./logo.png\";\nimport \"./App.css\";\nimport Posts from \"./Posts\";\nimport SearchAppBar from \"./SearchAppBar\";\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker\n    .register(\"./service-worker.js\")\n    .then(function () {\n      console.log(\"Service Worker wurde registriert\");\n    })\n    .catch(function (error) {\n      console.log(\n        \"Registrierung des Service Workers fehlgeschlagen mit\" + error\n      );\n    });\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          <img src={logo} className=\"App-logo\" alt=\"Logo HTWK Köstlichkeiten\" />\n          <p className=\"Platzsparend\">Herzlich Willkommen bei den HTWK Köstlichkeiten!</p>\n        </div>\n        <SearchAppBar />\n      </header>\n      <main>\n        <p>Herzlich Willkommen! Stöbern Sie in unseren Rezepten!</p>\n        <Posts />\n        <p>Test</p>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}