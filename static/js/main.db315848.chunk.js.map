{"version":3,"sources":["logo.png","Posts.js","useFetch.js","App.js","reportWebVitals.js","index.js"],"names":["Posts","posts","url","useState","data","setData","useEffect","a","fetch","response","ok","json","loadData","useFetch","Grid","container","spacing","map","post","index","item","xs","Card","CardContent","Typography","color","gutterBottom","dangerouslySetInnerHTML","__html","title","rendered","variant","component","content","navigator","serviceWorker","register","then","console","log","warn","App","className","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAAe,G,MAAA,IAA0B,kC,oFCO1B,SAASA,IACtB,IAAMC,ECNO,SAAkBC,GAC7B,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAcA,OAbAC,qBAAU,WAAM,4CACZ,8BAAAC,EAAA,sEAC2BC,MAAMN,GADjC,WACUO,EADV,QAEiBC,GAFjB,iEAMwBD,EAASE,OANjC,OAMUV,EANV,OAOII,EAAQJ,GAPZ,4CADY,uBAAC,WAAD,wBAWZW,KACD,CAACV,IACGE,EDTKS,CAAS,yDAEvB,OACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACGf,GACCA,EAAMgB,KAAI,SAACC,EAAMC,GAAP,OACR,cAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,MAAM,gBACNC,cAAY,EACZC,wBAAyB,CAAEC,OAAQV,EAAKW,MAAMC,YAEhD,cAACN,EAAA,EAAD,CACEO,QAAQ,QACRC,UAAU,IACVL,wBAAyB,CAAEC,OAAQV,EAAKe,QAAQH,kBAXjCX,QET5B,kBAAmBe,UACtBA,UAAUC,cAAcC,SAAS,uBAAuBC,MAAK,WAC5DC,QAAQC,IAAI,uCAGbD,QAAQE,KAAK,+DAoBAC,MAff,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,gCACzC,yFACA,cAAC7C,EAAD,OAEF,+BACE,2CCZO8C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.db315848.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.8e152f3d.png\";","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nexport default function Posts() {\r\n  const posts = useFetch(\"https://www.brain2brain.de/RAW-WP/wp-json/wp/v2/posts\");\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {posts &&\r\n        posts.map((post, index) => (\r\n          <Grid item xs={4} key={index}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  gutterBottom\r\n                  dangerouslySetInnerHTML={{ __html: post.title.rendered }}\r\n                />\r\n                <Typography\r\n                  variant=\"body2\"\r\n                  component=\"p\"\r\n                  dangerouslySetInnerHTML={{ __html: post.content.rendered }}\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n    </Grid>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useFetch(url) {\r\n    const [data, setData] = useState(null);\r\n    useEffect(() => {\r\n        async function loadData() {\r\n            const response = await fetch(url);\r\n            if(!response.ok) {\r\n                return;\r\n            }\r\n\r\n            const posts = await response.json();\r\n            setData(posts);\r\n        }\r\n\r\n        loadData();\r\n    }, [url]);\r\n    return data;\r\n}","import logo from \"./logo.png\";\nimport \"./App.css\";\nimport Posts from \"./Posts\";\n\n(function() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.register('./service-worker.js').then(function() {\n\t\t\tconsole.log('Service Worker wurde registriert');\n\t\t});\n\t} else {\n\t\tconsole.warn('Browser bietet keine Unterstützung für Service Worker');\n\t}\n\n})();\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"Logo HTWK Köstlichkeiten\" />\n        <p>Herzlich Willkommen! Stöbern Sie in unseren Rezepten!</p>\n        <Posts />\n      </header>\n      <main>\n        <p>Test</p>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}